image: bradqwood/rust-build-docker:1.2.0

stages:
  - lint
  - test
  - publish
  - build

variables:
  CARGO_HOME: "${CI_PROJECT_DIR}/.cargo"

cache:
  paths:
    - target/
    - .cargo/

before_script:
  - rustup --version

lint:
  stage: lint
  script:
    - just lint
  only:
    - branches

test:
  stage: test
  script:
    - just tarp
  artifacts:
    expose_as: coverage report
    expire_in: 1 week
    paths:
      - tarp/tarpaulin-report.html
  only:
    - branches

publish to crates.io:
  stage: publish
  only:
    - /^(\d+\.)?(\d+\.)?(\*|\d+)$/
  except:
    - branches
  script:
    # check that the git tag semver string is the same as the string in Cargo.toml
    - test $(grep version Cargo.toml| head -1 | cut -f3 -d\ ) = \"$CI_COMMIT_TAG\"
    - cargo publish --token $CRATES_DOT_IO_KEY --allow-dirty

build musl package:
  stage: build
  image: registry.gitlab.com/rust_musl_docker/image:stable-latest
  # only:
  #   - /^(\d+\.)?(\d+\.)?(\*|\d+)$/
  # except:
  #   - branches
  script:
    - export BUILD_DIR=git_lab_cli-${CI_COMMIT_TAG}-x86_64-unknown-linux-musl
    - cargo build --release --target=x86_64-unknown-linux-musl
    - mkdir -p ${BUILD_DIR}/man
    - find target/x86_64-unknown-linux-musl -type f -name 'git-lab' | xargs strip
    - find target/x86_64-unknown-linux-musl -type f -name 'git-lab' | xargs -i cp -p {} ${BUILD_DIR}
    - find target/x86_64-unknown-linux-musl -type f -name 'git-lab.1' | xargs -i cp -p {} ${BUILD_DIR}/man
    - cp LICENSE ${BUILD_DIR}
    - cp README.md ${BUILD_DIR}
    - tar zcvf ${BUILD_DIR}.tar.gz ${BUILD_DIR}
  artifacts:
    expose_as: musl binary
    paths:
      - *.tar.gz
